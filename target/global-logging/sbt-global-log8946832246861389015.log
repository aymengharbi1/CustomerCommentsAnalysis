[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.0 (Oracle Corporation Java 1.8.0_381)
[debug] Load.defaultLoad until apply took 281.5614ms
[debug]           Load.loadUnit: plugins took 241.2465ms
[debug]           Load.loadUnit: defsScala took 0.7669ms
[debug] [Loading] Scanning directory C:\Users\Mha.DESKTOP-0KPQ9V3\Downloads\CustomerCommentsAnalysis\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Mha.DESKTOP-0KPQ9V3\Downloads\CustomerCommentsAnalysis\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 47.1896 ms
[debug]               Load.resolveProject(customercommentsanalysis-build) took 115.5027ms
[debug]             Load.loadTransitive: finalizeProject(Project(id customercommentsanalysis-build, base: C:\Users\Mha.DESKTOP-0KPQ9V3\Downloads\CustomerCommentsAnalysis\project, plugins: List(<none>))) took 207.4546ms
[debug] [Loading] Done in C:\Users\Mha.DESKTOP-0KPQ9V3\Downloads\CustomerCommentsAnalysis\project, returning: (customercommentsanalysis-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 239.9069ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.5563ms
[debug]         Load.loadUnit(file:/C:/Users/Mha.DESKTOP-0KPQ9V3/Downloads/CustomerCommentsAnalysis/project/, ...) took 496.3861ms
[debug]       Load.apply: load took 829.4757ms
[debug]       Load.apply: resolveProjects took 9.999ms
[debug]       Load.apply: finalTransforms took 129.3826ms
[debug]       Load.apply: config.delegates took 13.4147ms
[debug]       Load.apply: Def.make(settings)... took 972.6176ms
[debug]       Load.apply: structureIndex took 240.3006ms
[debug]       Load.apply: mkStreams took 2.3729ms
[info] loading project definition from C:\Users\Mha.DESKTOP-0KPQ9V3\Downloads\CustomerCommentsAnalysis\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 10118.8385ms
[debug]     Load.loadUnit: defsScala took 0.0048ms
[debug] [Loading] Scanning directory C:\Users\Mha.DESKTOP-0KPQ9V3\Downloads\CustomerCommentsAnalysis
[debug]       Load.loadUnit: mkEval took 11.8351ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Mha.DESKTOP-0KPQ9V3\Downloads\CustomerCommentsAnalysis, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.5282 ms
[info] loading settings for project customercommentsanalysis from build.sbt ...
[debug]         Load.resolveProject(customercommentsanalysis) took 7.3814ms
[debug]       Load.loadTransitive: finalizeProject(Project(id customercommentsanalysis, base: C:\Users\Mha.DESKTOP-0KPQ9V3\Downloads\CustomerCommentsAnalysis, plugins: List(<none>))) took 13.1974ms
[debug] [Loading] Done in C:\Users\Mha.DESKTOP-0KPQ9V3\Downloads\CustomerCommentsAnalysis, returning: (customercommentsanalysis)
[debug]     Load.loadUnit: loadedProjectsRaw took 6859.0508ms
[debug]     Load.loadUnit: cleanEvalClasses took 30.3311ms
[debug]   Load.loadUnit(file:/C:/Users/Mha.DESKTOP-0KPQ9V3/Downloads/CustomerCommentsAnalysis/, ...) took 17013.5848ms
[debug] Load.apply: load took 17226.5883ms
[debug] Load.apply: resolveProjects took 0.3499ms
[debug] Load.apply: finalTransforms took 24.9999ms
[debug] Load.apply: config.delegates took 0.8993ms
[debug] Load.apply: Def.make(settings)... took 287.0556ms
[debug] Load.apply: structureIndex took 48.3253ms
[debug] Load.apply: mkStreams took 0.0046ms
[info] set current project to CustomerCommentsAnalysis (in build file:/C:/Users/Mha.DESKTOP-0KPQ9V3/Downloads/CustomerCommentsAnalysis/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] 
[info] Here are some highlights of sbt 1.10.0:
[info]   - SIP-51 support for Scala 2.13 evolution
[info]   - Various Zinc fixes
[info]   - ConsistentAnalysisFormat: new Zinc Analysis serialization
[info]   - CommandProgress API
[info] See https://eed3si9n.com/sbt-1.10.0 for full release notes.
[info] Hide the banner for this release by running `skipBanner`.
[info] sbt server started at local:sbt-server-96744abd50270dcf95be
[debug] Writing bsp connection file
[info] started sbt server
